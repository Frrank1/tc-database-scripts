select c.component_name
     , cat.category_name as catalog
     , cat.category_id
     , (select name from project_category_lu where project_category_id = p.project_category_id) as phase_desc
     , p.project_id
     , p.project_category_id
     , p.project_category_id + 111
        as phase_id
     , pi1.scheduled_start_time as submission_start
     , pi1.scheduled_end_time as submission_end
     , (pi1.scheduled_end_time - pi1.scheduled_start_time)::INTERVAL HOUR(4) to HOUR as submission_duration
     , pi3.scheduled_start_time as review_start
     , pi3.scheduled_end_time as review_end
     , (pi3.scheduled_end_time - pi3.scheduled_start_time)::INTERVAL HOUR(4) to HOUR as review_duration
     , ph.parameter::int reviewers_required
     , 'f'::boolean as screening_extension_needed
     , (case when pi3.phase_status_id=2 and current + 48 units hour > pi3.scheduled_end_time then 't' else 'f' end)::boolean as review_extension_needed
     , cl.description as level
     , (select count(distinct u.resource_id)
                    from upload u, submission s
                   where u.project_id = p.project_id
                     and s.submission_type_id = 1
                     and s.submission_status_id in (1,2,3,4)
                     and u.upload_id = s.upload_id
                     and u.upload_type_id = 1) as submission_count
     ,(select count(distinct u.resource_id)
        from submission s, upload u
        where u.project_id = p.project_id
        and s.upload_id = u.upload_id
        and u.upload_type_id = 1
        and s.submission_type_id = 1
        and s.submission_status_id in (1,3,4))
        as submission_passed_screening_count
     , cvd.level_id
     , cv.version
     , cv.version_text
     , case when
      exists (select * from project_phase where project_id = p.project_id and phase_type_id = 1)
      then (select (scheduled_start_time + 12 units hour)
          from project_phase
         where project_id = p.project_id
           and phase_type_id = 1)
      else
        (select (scheduled_start_time + 12 units hour)
          from project_phase
         where project_id = p.project_id
           and phase_type_id = 2)
      end as opens_on
     , exists (select * from project_phase where project_id = p.project_id and phase_type_id in (1,2) and phase_status_id in (2,3)) as open
     , pi_prize.value::FLOAT AS prize
     , (CASE WHEN pi_is_dr.value = 'On' THEN NVL(pi_dr_points.value, pi_prize.value) ELSE '0' END)::FLOAT AS dr_points
     , 0 as is_new_review_system
  from project p
     , comp_versions cv
     , project_phase pi1
     , project_phase pi3
     , phase_criteria ph
     , comp_catalog c
     , categories cat
     , comp_version_dates cvd
     , comp_level cl
     , project_info pinfo
     , project_info pi_prize
     , project_info pi_is_dr
     , outer project_info pi_dr_points
 where p.project_id = pinfo.project_id
   and pinfo.project_info_type_id = 1
   and pinfo.value = cv.comp_vers_id
   and p.project_id = pi1.project_id
   and pi1.phase_type_id = 2
   and p.project_id = pi3.project_id
   and pi3.phase_type_id = 4
   and ph.project_phase_id = pi3.project_phase_id
   and ph.phase_criteria_type_id = 6
   and c.component_id = cv.component_id
   and c.root_category_id = cat.category_id
   and cvd.comp_vers_id = cv.comp_vers_id
   and cvd.phase_id = cv.phase_id
   and cvd.level_id = cl.level_id
   AND p.project_id = pi_prize.project_id
   AND pi_prize.project_info_type_id = 16
   AND p.project_id = pi_is_dr.project_id
   AND pi_is_dr.project_info_type_id = 26
   AND p.project_id = pi_dr_points.project_id
   AND pi_dr_points.project_info_type_id = 30
   and p.project_id = @pj@