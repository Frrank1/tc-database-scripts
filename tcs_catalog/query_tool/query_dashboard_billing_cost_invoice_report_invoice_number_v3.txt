SELECT pm.create_date payment_date, p.project_id as contest_id, ttc.name client, ttp.name billing_project_name, tdp.name direct_project_name, 
	   (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       CASE
       WHEN ps.project_status_id not in (1,2,3) THEN 'Finished' 
       WHEN not exists(select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current )
          THEN 'Scheduled'
       WHEN (select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current ) <= current
          THEN 'Active'
       ELSE 'Active'
       END as contest_status,
  SUM(case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       pt.payment_type_desc,
    CASE WHEN pmd.payment_type_id in (45,57)
         THEN 'Copilot'
         WHEN pmd.payment_type_id in (27, 48)
         THEN 'Spec Review'
         WHEN pmd.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
         THEN 'Winner'
         WHEN pmd.payment_type_id in (7, 28, 26)
         THEN 'Review'
         WHEN pmd.payment_type_id in (24)
         THEN 'Reliability'
         WHEN pmd.payment_type_id in (4)
         THEN 'Referral'
         WHEN pmd.payment_type_id in (23,37,46,47)
         THEN 'Bugs'
         WHEN pmd.payment_type_id in (39)
         THEN 'Build'
         WHEN pmd.payment_type_id NOT in (39,23,37,46,47,45,57,4,24,27,7, 28, 26,6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
         THEN 'Misc'
         ELSE 'Not Sure'
    END as line_item_category,
    CASE WHEN pmd.payment_type_id in (23,37,46,47, 45, 57)
         THEN pmd.jira_issue_id 
         ELSE ''
    END as reference_id,
    pmd.total_amount as line_item_amount,
     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id, 
        p.project_category_id,
        pmd.payment_detail_id,    
        

0 is_studio,
 pm.payment_id,
 pmd.payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id
  
FROM informixoltp:payment pm  
        INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id,
     informixoltp:payment_type_lu pt,
     project p,     
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi2, -- contest_fee
     project_info pi3, -- billing account
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i
where  pmd.component_project_id = p.project_id
   and pmd.payment_type_id = pt.payment_type_id
   and pmd.installment_number = 1 and pmd.payment_type_id != 4
   AND NOT pmd.payment_status_id IN (65,68, 69)
   and p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id != 3 and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and (p.project_status_id not in (1,2,3) or (pmd.payment_type_id in (23,37,46,47, 45, 57) and pmd.jira_issue_id is not null))
  and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
  and ir.contest_id = p.project_id
  and ir.payment_id = pm.payment_id
  and ir.invoice_id = i.invoice_id
  and ir.invoice_type_id!=9
  and i.invoice_number = '@invoicenumber@'
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29
 

union  all -- reliability


SELECT pm2.create_date payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       CASE
       WHEN ps.project_status_id not in (1,2,3)
          THEN 'Finished'
       WHEN not exists(select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current )
          THEN 'Scheduled'
       WHEN (select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current ) <= current
          THEN 'Active'
       ELSE
          'Active'
       END as contest_status,

  SUM(case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       pt.payment_type_desc,
    CASE WHEN pmd2.payment_type_id in (24)
         THEN 'Reliability'
         ELSE 'Misc'
    END as line_item_category,
    CASE WHEN pmd.payment_type_id in (23,37,46,47, 45, 57)
         THEN pmd.jira_issue_id 
         ELSE ''
    END as reference_id,
    pmd2.total_amount as line_item_amount,
     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id,
        p.project_category_id,
        pmd.payment_detail_id,    

case when pc.project_type_id = 3 then 1
else 0 end as is_studio,
  pm2.payment_id,
  pmd.payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id

FROM informixoltp:payment pm  
        INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id
	    INNER JOIN (informixoltp:payment_detail pmd2 JOIN informixoltp:payment pm2 on pm2.most_recent_detail_id = pmd2.payment_detail_id  
                                            AND pmd2.payment_type_id in (24, 67) AND NOT pmd2.payment_status_id IN (65, 68, 69))
                   on pm.payment_id = pmd2.parent_payment_id,
     informixoltp:payment_type_lu pt,
     project p,     
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi2, -- contest_fee
     project_info pi3, -- billing account
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i

where  pmd.component_project_id = p.project_id
   and pmd.payment_type_id = pt.payment_type_id
   and pmd.installment_number = 1 and pmd2.payment_type_id != 4
   AND NOT pmd.payment_status_id IN (65,68, 69)
   and p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id != 3 and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and p.project_status_id not in (1,2,3)
  and ir.contest_id = p.project_id
  and ir.payment_id = pm2.payment_id
  and ir.invoice_id = i.invoice_id
  and ir.invoice_type_id!=9
  and i.invoice_number = '@invoicenumber@'
  and (pm2.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29

union all   -- DR

SELECT (TO_DATE(SUBSTR(pi21.value, 0, 16)::varchar(16), '%m.%d.%Y %H:%M')) payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       'Finished' as contest_status,
  SUM(case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       'Digital Run' as payment_type_desc,
	   
'Digital Run' as line_item_category,
    '' as reference_id,
case when p.project_status_id  in (1,7) then
	nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0) 
else 0 end as line_item_amount,

     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id,       
        p.project_category_id,
         null::int as payment_detail_id,  
        

case when pc.project_type_id = 3 then 1
else 0 end as is_studio,
  null::int as payment_id,
  null::varchar(255) as payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id
FROM project p,
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi26, -- contest_fee
     project_info pi3, -- billing account
     project_info pi21,
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i

where  p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi26.project_id
  and pi26.project_info_type_id = 26 and pi26.value = 'On'
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and p.project_id = pi21.project_id and pi21.project_info_type_id = 21
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  
   and p.project_status_id = 7 
   
  and p.project_category_id != 27
  and pi21.value is not null and pi21.value != ''
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
 
  and (TO_DATE(SUBSTR(pi21.value, 0, 16)::varchar(16), '%m.%d.%Y %H:%M') BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
  and ir.contest_id = p.project_id
  and ir.invoice_type_id = 10
  and ir.payment_id is null
  and ir.invoice_id = i.invoice_id
  and i.invoice_number = '@invoicenumber@'
  and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29

union all  -- contest fee (not % enabled and status7)

SELECT s.payment_date, s.contest_id, s.client, s.billing_project_name, s.direct_project_name,
    s.launch_date, s.completion_date, s.category, s.contest_name, s.contest_status,
    s.actual_total_member_costs, s.payment_type_desc, s.line_item_category, s.reference_id, 
    (case when s.contest_fee_percentage = 0 then s.line_item_amount
      else s.contest_fee_percentage * s.estimated_member_costs end) as line_item_amount,
    s.client_id, s.billing_project_id, s.direct_project_id, s.project_category_id, 
    s.payment_detail_id, s.is_studio, s.payment_id,
    s.payment_desc, s.invoice_amount, s.processed, s.process_date, s.invoice_number, 
    s.invoice_id, s.invoice_record_id
    
FROM table(MULTISET(
SELECT (pm.create_date) payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
      'Finished' as contest_status,
        
  SUM(case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       'Contest Fee' as payment_type_desc,
	   
'Contest Fee' as line_item_category,
    '' as reference_id,
case when p.project_status_id in (9, 10) and exists (select * from project_phase where project_id = p.project_id and phase_type_id = 1 and phase_status_id in (2,3))
            then pi2.value::DECIMAL(10,2)
            when p.project_status_id in (9, 10) and not exists (select * from project_phase where project_id = p.project_id and phase_type_id = 1 and phase_status_id in (2,3))
            then 0 
            else pi2.value::DECIMAL(10,2) end as line_item_amount,

     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id,
       
        p.project_category_id,
        null::int as payment_detail_id,    
        
0 as is_studio,
  null::int as payment_id,
  null::varchar(255) as payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id,

  nvl((select (cast (nvl(pi57.value, '0') as DECIMAL (10,2))) from project_info pi57 where
    pi57.project_id=p.project_id and pi57.project_info_type_id=57), 0) as contest_fee_percentage,
    
    nvl((select nvl(sum (cast (nvl (value, '0') as DECIMAL (10,2))), 0) from project_info
            where project_info_type_id in (33, 35, 16, 38, 39, 49)
            and project_id = p.project_id), 0)
        +
        nvl(((select nvl(sum (cast (nvl (value, '0') as DECIMAL (10,2))), 0) from project_info
            where project_info_type_id = 16
            and project_id = p.project_id)/2), 0)
        +
        nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
            where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
            and pi26.value = 'On'
            and pi26.project_id =  p.project_id ), 0) as estimated_member_costs
      
FROM informixoltp:payment pm  
        INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id,
     informixoltp:payment_type_lu pt,
	 project p,
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi2, -- contest_fee
     project_info pi3, -- billing account
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i

where  pmd.component_project_id = p.project_id
   and pmd.payment_type_id = pt.payment_type_id
   and pmd.installment_number = 1
   AND NOT pmd.payment_status_id IN (65,68, 69)
  and p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id not in (1,2,3)
  and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and ir.contest_id = p.project_id
  and ir.invoice_type_id = 9
  and ir.payment_id is null
  and ir.invoice_id = i.invoice_id
  and i.invoice_number = '@invoicenumber@'
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
   and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
  and pmd.payment_detail_id =
  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2  
        INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
        where pmd2.component_project_id = p.project_id
           and pmd2.installment_number = 1
           AND NOT pmd2.payment_status_id IN (65,68, 69)
           and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))
  and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
  and (nvl((select (cast (nvl(pi57.value, '0') as DECIMAL (10,2))) from project_info pi57 where
    pi57.project_id=p.project_id and pi57.project_info_type_id=57), 0) = 0)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31)) AS s

union all  -- contest fee ( % enabled) (payment_detail)

SELECT (pm.create_date) as payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       'Finished' contest_status,
   
  (case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       'Contest Fee' as payment_type_desc,
	   
'Contest Fee' as line_item_category,
    '' as reference_id,
    
NVL(pmd.total_amount, 0)  * (cast (nvl(pi57.value, '0') as DECIMAL (10,2))) as line_item_amount,

ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id,  
        p.project_category_id,
        null::int as payment_detail_id,    


0 as is_studio,
  pm.payment_id as payment_id,
  null::varchar(255) as payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id
FROM project p,
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi3, -- billing account
     project_info pi57, -- percentage contest fee
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i,
     informixoltp:payment_detail pmd, 
     informixoltp:payment pm

where  p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and (p.project_status_id not in (1,2,3) or (pmd.payment_type_id in (23,37,46,47, 45, 57) and pmd.jira_issue_id is not null))
  and p.project_id = pi57.project_id and pi57.project_info_type_id = 57
  and ((cast (nvl(pi57.value, '0') as DECIMAL (10,2))) > 0) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and pmd.component_project_id = p.project_id 
  and pmd.installment_number = 1
  and pm.most_recent_detail_id = pmd.payment_detail_id
  and (NOT pmd.payment_status_id IN (65, 68, 69))
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and ir.contest_id = p.project_id
  and ir.invoice_type_id = 9
  and ir.payment_id = pm.payment_id
  and ir.invoice_id = i.invoice_id
  and i.invoice_number = '@invoicenumber@'
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
  
   and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))


union all  -- contest fee (% enabled) (payment_detail2)

SELECT (pm.create_date) as payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       'Finished' as contest_status,
   
  (case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3)))
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       'Contest Fee' as payment_type_desc,
	   
'Contest Fee' as line_item_category,
    '' as reference_id,
     NVL(pmd2.total_amount, 0)  * (cast (nvl(pi57.value, '0') as DECIMAL (10,2))) as line_item_amount,
    
     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id, 
        p.project_category_id,
        null::int as payment_detail_id,    

0 as is_studio,
  pm2.payment_id as payment_id,
  null::varchar(255) as payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id
FROM project p,
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi3, -- billing account
     project_info pi57, -- percentage contest fee
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i,
     informixoltp:payment_detail pmd, 
     informixoltp:payment pm,
     informixoltp:payment_detail pmd2,
     informixoltp:payment pm2

where  p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_status_id not in (1,2,3)
  and p.project_id = pi57.project_id  and pi57.project_info_type_id = 57
  and p.project_id = pi57.project_id
  and pi57.project_info_type_id = 57
  and ((cast (nvl(pi57.value, '0') as DECIMAL (10,2))) > 0) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
  and pm.payment_id = pmd2.parent_payment_id
  and pmd.component_project_id = p.project_id 
  and pmd2.installment_number = 1
  and pm.most_recent_detail_id = pmd.payment_detail_id 
  and pm2.most_recent_detail_id = pmd2.payment_detail_id
  and (NOT pmd2.payment_status_id IN (65, 68, 69))
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and ir.contest_id = p.project_id
  and ir.invoice_type_id = 9
  and ir.payment_id = pm2.payment_id
  and ir.invoice_id = i.invoice_id
  and i.invoice_number = '@invoicenumber@'
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
  
   and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))


union all  -- contest fee (status7 and % enabled) (DR)

SELECT (TO_DATE(SUBSTR(pi21.value, 0, 16)::varchar(16), '%m.%d.%Y %H:%M')) as payment_date,
       p.project_id as contest_id,
       ttc.name client,	
       ttp.name billing_project_name,
       tdp.name direct_project_name,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       (select  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
				and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id) as completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pi.value as contest_name,
       'Finished' as contest_status,

  (case when (p.project_status_id  = 7 OR (p.project_status_id  = 1
        and exists (select phase_type_id from project_phase ph, project_category_lu pcl
                where phase_type_id = (case when p.project_category_id in (9, 29) then 4
                                           when pcl.project_type_id in (1,2) then 10
										   else 4 end) 
                and pcl.project_category_id = p.project_category_id and ph.project_id = p.project_id and phase_status_id = 3))) 
   then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  and pmd2.payment_type_id != 4
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_total_member_costs,

       'Contest Fee' as payment_type_desc,
	   
'Contest Fee' as line_item_category,
    '' as reference_id,
nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
            where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id
            and pi26.value = 'On'  and pi26.project_id =  p.project_id), 0) * (cast (nvl(pi57.value, '0') as DECIMAL (10,2))) as line_item_amount,

     ttc.client_id,
     ttp.project_id billing_project_id,
    tdp.project_id direct_project_id,
    
        p.project_category_id,
        null::int as payment_detail_id,    


0 as is_studio,
  null::int as payment_id,
  null::varchar(255) as payment_desc,
  ir.invoice_amount,
  ir.processed,
  i.invoice_date as process_date,
  i.invoice_number,
  ir.invoice_id,
  ir.invoice_record_id
FROM project p,
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi3, -- billing account
     project_info pi57, -- percentage contest fee
     project_info pi21,project_info pi26,
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     informixoltp:invoice_record ir,
     informixoltp:invoice i

where p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@) 
  and p.project_status_id = 7
  and p.project_id = pi57.project_id and pi57.project_info_type_id = 57
  and ((cast (nvl(pi57.value, '0') as DECIMAL (10,2))) > 0) 
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi3.project_id
  and pi3.project_info_type_id = 32
  and pi3.value = ttp.project_id
    and p.project_id = pi26.project_id
  and pi26.project_info_type_id = 26 and pi26.value = 'On'
   and p.project_id = pi21.project_id
  and pi21.project_info_type_id = 21
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id != 3 and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and p.project_id = DECODE(@pj@, 0, p.project_id, @pj@)
  and ir.contest_id = p.project_id
  and ir.invoice_type_id = 9
  and ir.payment_id is null
  and ir.invoice_id = i.invoice_id
  and i.invoice_number = '@invoicenumber@'
   and (TO_DATE(SUBSTR(pi21.value, 0, 16)::varchar(16), '%m.%d.%Y %H:%M') BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
   and exists 
  (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = p.tc_direct_project_id)
  
union all -- platform fee 

SELECT EXTEND(pf.payment_date,YEAR TO FRACTION) as payment_date, pf.customer_platform_fee_id as contest_id, c.name as client,
	null::varchar as billing_project_name, null::varchar as direct_project_name, null::datetime year to fraction as launch_date,
	null::datetime year to fraction as completion_date, null::varchar as category, null::varchar as contest_name,
	null::varchar as contest_status, null::int as actual_total_member_costs,
	'Platform Fee' as payment_type_desc, 'Platform Fee' as line_item_category, '' as reference_id,
	pf.amount as line_item_amount, c.client_id,
	null::int as billing_project_id, null::int as direct_project_id, null::int as project_category_id,
	null::int as payment_detail_id,  null::int as is_studio,
	null::int as payment_id, null::varchar as payment_desc, ir.invoice_amount,
    ir.processed, i.invoice_date as process_date, i.invoice_number, ir.invoice_id, ir.invoice_record_id	
FROM time_oltp:customer_platform_fee pf, time_oltp:client c, informixoltp:invoice_record ir, informixoltp:invoice i
WHERE pf.client_id=c.client_id
 	and pf.client_id=@clientid@
 	and (pf.payment_date BETWEEN TO_DATE('@sdt@','%Y-%m-%d')
		and TO_DATE('@edt@','%Y-%m-%d'))
	and ir.contest_id = pf.customer_platform_fee_id
    and ir.invoice_type_id = 11
    and ir.payment_id is null
    and ir.invoice_id = i.invoice_id
    and i.invoice_number = '@invoicenumber@'

union  -- project level cost
SELECT pm.create_date payment_date, null::int as contest_id,  ttc.name client,	ttp.name billing_project_name,  tdp.name direct_project_name,
  null::datetime year to fraction as launch_date,
  null::datetime year to fraction as completion_date, null::varchar as category,
  null::varchar as contest_name, null::varchar as contest_status,
  SUM(NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.cockpit_project_id = tdp.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.cockpit_project_id = tdp.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
    ) as actual_total_member_costs,
    pt.payment_type_desc,
    CASE WHEN pmd.payment_type_id in (69)  
	     THEN 'Copilot'
     WHEN pmd.payment_type_id in (68, 70, 71)  
	      THEN 'Bugs'
     ELSE 'Misc' 
	END as line_item_category,
    CASE WHEN pmd.payment_type_id in (68,69,70,71)
         THEN pmd.jira_issue_id 
         ELSE ''
    END as reference_id,
    pmd.total_amount as line_item_amount, ttc.client_id,  ttp.project_id billing_project_id,
    tdp.project_id direct_project_id, null::int as project_category_id, pmd.payment_detail_id,    
    0 as is_studio,
    pm.payment_id,
    pmd.payment_desc,
    ir.invoice_amount,
    ir.processed,
    i.invoice_date as process_date,
    i.invoice_number,
    ir.invoice_id,
    ir.invoice_record_id
    
FROM informixoltp:payment pm
        INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id,
     informixoltp:payment_type_lu pt, tc_direct_project tdp, 
     time_oltp:project ttp, time_oltp:client_project ttcp, time_oltp:client ttc,
     informixoltp:invoice_record ir, informixoltp:invoice i
where pmd.cockpit_project_id = tdp.project_id
    and pmd.payment_type_id = pt.payment_type_id
    and pmd.installment_number = 1 and pmd.payment_type_id != 4
    and NOT pmd.payment_status_id IN (65,68, 69)
    and ttp.project_id = ttcp.project_id
    and ttcp.client_id = ttc.client_id
    and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
    and ttp.project_id = (select min(billing_account_id) 
                            from corporate_oltp:direct_project_account dpa 
                            where dpa.project_id = tdp.project_id)
    and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)                    
    and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
    and NVL(pmd.component_project_id, 0) = @pj@
    and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
    and ir.cockpit_project_id = tdp.project_id
    and ir.payment_id = pm.payment_id
    and ir.invoice_id = i.invoice_id
    and ir.invoice_type_id!=9
    and i.invoice_number = '@invoicenumber@'
    and exists (select resource_id from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3) and upg.resource_id = tdp.project_id)
group by 1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29
