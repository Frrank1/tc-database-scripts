SELECT s.project_id,
    s.client,
    s.client_id,
    s.billing_project_name,
    s.billing_project_id,
    s.direct_project_name,
    s.direct_project_id,
    s.launch_date,
    s.completion_date,
    s.category,
    s.project_category_id,
    s.contest_name,
    s.is_studio,
      nvl((case when s.contest_fee_percentage = 0 or s.contest_fee_percentage is null then s.contest_fee
         else (case when s.project_status_id not in (1,2) or (s.project_status_id = 1 and actual_active = 1) then s.contest_fee_percentage * s.actual_Member_Costs
                else s.contest_fee_percentage * s.estimated_member_costs end)
         end), 0) as contest_fee,
    s.contest_status,
    s.estimated_member_costs,
    s.actual_Member_Costs, s.actual_active
    
FROM table(MULTISET(select p.project_id,
       ttc.name client,
       ttc.client_id,
       ttp.name billing_project_name,
       ttp.project_id billing_project_id,
       tdp.name direct_project_name,
       tdp.project_id direct_project_id,
       (select min(nvl(actual_start_time, scheduled_start_time)) from project_phase ph where ph.project_id=p.project_id and ph.phase_type_id = 1) as launch_date,
       ct.completion_time completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pc.project_category_id,
       pi.value as contest_name,
       0 as is_studio,
       case when p.project_status_id not in (1,2,7) then 0 
            else pi2.value::DECIMAL(10,2) end as contest_fee,
       CASE
       WHEN ps.project_status_id in (9, 10)
          THEN 'Cancelled'
       WHEN ps.project_status_id in (4, 5, 6, 8, 11)
          THEN 'Failed'
       WHEN ps.project_status_id = 7
          THEN 'Completed'
       WHEN not exists(select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current )
          THEN 'Scheduled'
       WHEN (select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current ) <= current
          THEN 'Active'
       ELSE
          'Active'
       END as contest_status,
       
    nvl((select cast (nvl(pi57.value, '0') as DECIMAL (10,2)) from project_info pi57
                where p.project_id = pi57.project_id and pi57.project_info_type_id = 57),0) as contest_fee_percentage,
    p.project_status_id,
	
	case when (p.project_status_id  = 1 and (p.project_category_id in (9, 29) or pc.project_type_id = 3)
       	   and exists (select phase_type_id from project_phase
				where project_id = p.project_id and phase_type_id =4 and phase_status_id = 3)
		   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))))
	  OR (p.project_status_id  = 1 and (p.project_category_id not in (9, 29) and pc.project_type_id in (1,2))
       	   and (exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =11 and phase_status_id in(2,3))
		        OR not exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =10 and phase_status_id in (1,2)))
		   	   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)))) 
	then 1 else 0 end as actual_active,
    
(nvl((SELECT sum(prize_amount * number_of_submissions) from prize pr
                where pr.project_id = p.project_id), 0)
	 + 
	   nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
                  where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id  
                  and pi26.value = 'On' 
                  and pi26.project_id =  p.project_id )
           +
           nvl((select nvl(sum (cast (nvl (value, '0') as DECIMAL (10,2))), 0) from project_info pi
                  where project_info_type_id in (33, 35, 38, 39, 49) 
                    and pi.project_id = p.project_id), 0), 0) )	  as estimated_member_costs,

  SUM(case when (p.project_status_id = 7
           OR (p.project_status_id  = 1 and (p.project_category_id in (9, 29) or pc.project_type_id = 3)
       	   and exists (select phase_type_id from project_phase
				where project_id = p.project_id and phase_type_id =4 and phase_status_id = 3)
		   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))))
	  OR (p.project_status_id  = 1 and (p.project_category_id not in (9, 29) and pc.project_type_id in (1,2))
       	   and (exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =11 and phase_status_id in(2,3))
		        OR not exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =10 and phase_status_id in (1,2)))
		   	   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)))))  then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_Member_Costs
from project p,      
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi2, -- contest_fee
     direct_project_account db, -- billing account
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
          table (multiset((select  ph.project_id,  MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase ph, project_category_lu pcl, project pp
                                        where phase_type_id = (case when pp.project_category_id in (9, 29, 37) then 4
                                                                   when pcl.project_type_id in (1,2) then 10
								else 4 end)
				and pcl.project_category_id = pp.project_category_id and ph.project_id = pp.project_id  GROUP BY ph.project_id))) ct

where p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@)
  and p.project_id = ct.project_id
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and db.project_id = p.tc_direct_project_id
  and db.billing_account_id = ttp.project_id
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id != 3 and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and db.billing_account_id = (select max(billing_account_id) from direct_project_account where project_id = tdp.project_id)
  and (
       exists(select unique upg.resource_id from user_permission_grant upg
                where upg.user_id = DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3)
                 and upg.resource_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@))
       or 
       exists(select gadp.tc_direct_project_id 
     		from group_member AS gm, group_associated_direct_projects AS gadp
     		where gm.group_id = gadp.group_id AND gm.active = 1 
     		AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
     		AND gadp.tc_direct_project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@))
       or
       exists(select gaba.billing_account_id
            from group_member AS gm, group_associated_billing_accounts AS gaba
            where gm.group_id = gaba.group_id AND gm.active = 1
            AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
            AND gaba.billing_account_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@))
       )
  and pc.project_type_id  != 3
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and (ct.completion_time BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17, 18

UNION ALL

select p.project_id,
       ttc.name client,
       ttc.client_id,
       ttp.name billing_project_name,
       ttp.project_id billing_project_id,
       tdp.name direct_project_name,
       tdp.project_id direct_project_id,
       (select max (scheduled_start_time) from project_phase where phase_type_id = 1 and project_id = p.project_id) as launch_date,
       ct.completion_time completion_date,
       DECODE(pc.name, 'UI Prototype Competition', 'UI Prototype', 'Assembly Competition', 'Assembly', 'RIA Build Competition', 'RIA Build', 'Test Suites', 'Test Suites', 'Test Scenarios', 'Test Scenarios',  pc.name) category,
       pc.project_category_id,
       pi.value as contest_name,
       0 as is_studio,
       case when p.project_status_id not in (1,2,7) then 0 
            else pi2.value::DECIMAL(10,2) end as contest_fee,
       CASE
       WHEN ps.project_status_id in (9, 10)
          THEN 'Cancelled'
       WHEN ps.project_status_id in (4, 5, 6, 8, 11)
          THEN 'Failed'
       WHEN ps.project_status_id = 7
          THEN 'Completed'
       WHEN not exists(select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current )
          THEN 'Scheduled'
       WHEN (select actual_start_time from project_phase pp where pp.project_id = p.project_id and pp.phase_type_id = 1 and pp.actual_start_time <= current ) <= current
          THEN 'Active'
       ELSE
          'Active'
       END as contest_status,

    (select nvl(pcfp.contest_fee_percentage, 0) from time_oltp:project_contest_fee_percentage pcfp
            where ttp.project_id = pcfp.project_id and pcfp.active = 'T') as contest_fee_percentage,
    p.project_status_id,
	
	case when (p.project_status_id  = 1 and (p.project_category_id in (9, 29) or pc.project_type_id = 3)
       	   and exists (select phase_type_id from project_phase
				where project_id = p.project_id and phase_type_id =4 and phase_status_id = 3)
		   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))))
	  OR (p.project_status_id  = 1 and (p.project_category_id not in (9, 29) and pc.project_type_id in (1,2))
       	   and (exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =11 and phase_status_id in(2,3))
		        OR not exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =10 and phase_status_id in (1,2)))
		   	   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)))) 
	then 1 else 0 end as actual_active,
    
        nvl((SELECT sum(prize_amount * number_of_submissions) from prize pr
                where pr.project_id = p.project_id), 0)
		+
		nvl(((select nvl(sum (cast (nvl (value, '0') as DECIMAL (10,2))), 0) from project_info
			where project_info_type_id in (33, 35, 38, 39, 49)
			and project_id = p.project_id)), 0)
		+
		nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
			where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
			and pi26.value = 'On'
			and pi26.project_id =  p.project_id ), 0) as estimated_member_costs,

  SUM(case when (p.project_status_id = 7
           OR (p.project_status_id  = 1 and (p.project_category_id in (9, 29) or pc.project_type_id = 3)
       	   and exists (select phase_type_id from project_phase
				where project_id = p.project_id and phase_type_id =4 and phase_status_id = 3)
		   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))))
	  OR (p.project_status_id  = 1 and (p.project_category_id not in (9, 29) and pc.project_type_id in (1,2))
       	   and (exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =11 and phase_status_id in(2,3))
		        OR not exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =10 and phase_status_id in (1,2)))
		   	   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)))))  then
      NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
  else NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
  end) as actual_Member_Costs
from project p,      
     tc_direct_project tdp,
     project_status_lu ps,
     project_category_lu pc,
     project_info pi, -- project name
     project_info pi2, -- contest_fee
     direct_project_account db, -- billing account
     time_oltp:project ttp,
     time_oltp:client_project ttcp,
     time_oltp:client ttc,
     table (multiset((select  project_id, MAX(NVL(actual_end_time, scheduled_end_time)) as completion_time from project_phase where phase_type_id = 4 GROUP BY project_id))) ct

where p.project_status_id = ps.project_status_id
  and p.project_category_id = pc.project_category_id
  and p.project_category_id IN (@pcids@)
  and p.project_id = ct.project_id
  and p.project_id = pi.project_id
  and pi.project_info_type_id = 6
  and p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and db.project_id = p.tc_direct_project_id
  and db.billing_account_id = ttp.project_id
  and ttp.project_id = ttcp.project_id
  and ttcp.client_id = ttc.client_id
  and p.project_status_id != 3 and p.project_category_id != 27
  and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
  and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
  and p.tc_direct_project_id = tdp.project_id
  and db.billing_account_id = (select max(billing_account_id) from direct_project_account where project_id = tdp.project_id)
  and (
       exists(select unique upg.resource_id from user_permission_grant upg
                where upg.user_id = DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3)
                 and upg.resource_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@))
       or 
       exists(select gadp.tc_direct_project_id 
     		from group_member AS gm, group_associated_direct_projects AS gadp
     		where gm.group_id = gadp.group_id AND gm.active = 1 
     		AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
     		AND gadp.tc_direct_project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@))
       or
       exists(select gaba.billing_account_id
            from group_member AS gm, group_associated_billing_accounts AS gaba
            where gm.group_id = gaba.group_id AND gm.active = 1
            AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
            AND gaba.billing_account_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@))
       )
  and pc.project_type_id = 3
  and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
  and (ct.completion_time BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18)) AS s

UNION ALL

 SELECT NULL::int as project_id, ttc.name as client, ttc.client_id as client_id, ttp.name as billing_project_name, ttp.project_id as billing_project_id,
 tdp.name as direct_project_name, tdp.project_id as direct_project_id, NULL::datetime year to fraction as launch_date, NULL::datetime year to fraction as completion_date,
 'Bug Race' as category, NULL::int as project_category_id, NULL::varchar as contest_name,
 0 as is_studio, 0 as contest_fee, NULL::varchar as contest_status, 0 as estimated_member_costs,
NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.cockpit_project_id = tdp.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount)
           FROM  informixoltp:payment_detail pmd,
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id,
                 informixoltp:payment pm2
            WHERE pmd.cockpit_project_id = tdp.project_id and pmd2.installment_number = 1
            and pm.most_recent_detail_id = pmd.payment_detail_id
            and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
     as actual_member_costs, 0 as actual_active
 FROM informixoltp:payment pm INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id,
     informixoltp:payment_type_lu pt, tc_direct_project tdp,
     time_oltp:project ttp, time_oltp:client_project ttcp, time_oltp:client ttc
 WHERE pmd.cockpit_project_id = tdp.project_id  and pmd.payment_type_id = pt.payment_type_id
    and pmd.installment_number = 1 and pmd.payment_type_id != 4 and NOT pmd.payment_status_id IN (65,68, 69)
    and ttp.project_id = ttcp.project_id and ttcp.client_id = ttc.client_id
    and ttc.client_id = DECODE(@clientid@, 0, ttc.client_id, @clientid@)
    and ttp.project_id = (select min(billing_account_id) from corporate_oltp:direct_project_account dpa where dpa.project_id = tdp.project_id)
    and ttp.project_id = DECODE(@billingaccountid@, 0, ttp.project_id, @billingaccountid@)
    and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)
    and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
    and (
       exists(select unique upg.resource_id from user_permission_grant upg
                where upg.user_id = DECODE(@uid@,0,upg.user_id,@uid@) and upg.permission_type_id IN (0,1,2,3)
                 and upg.resource_id = DECODE(0, 0, tdp.project_id, 0))
       OR
       exists(select gadp.tc_direct_project_id
     		from group_member AS gm, group_associated_direct_projects AS gadp
     		where gm.group_id = gadp.group_id AND gm.active = 1
     		AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
     		AND gadp.tc_direct_project_id = DECODE(0, 0, tdp.project_id, 0))
       OR
       exists(select gaba.billing_account_id
            from group_member AS gm, group_associated_billing_accounts AS gaba
            where gm.group_id = gaba.group_id AND gm.active = 1
            AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
            AND gaba.billing_account_id = DECODE(0, 0, ttp.project_id, 0))
       )
group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18



