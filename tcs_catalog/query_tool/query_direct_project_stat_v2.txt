SELECT  s.tc_direct_project_id AS tc_direct_project_id,
	SUM(case when s.status='Completed' then 1 else 0 end) AS completed_number,
        SUM(case when (s.status='Cancelled' ) then 1 else 0 end) AS cancelled_number,  
	SUM(s.member_cost) AS total_member_cost,
	ROUND ((SUM(case when s.status='Completed' then s.member_cost else 0 end)/(case when SUM(case when s.status='Completed' then 1 else 0 end)=0 
				then 1 else SUM(case when s.status='Completed' then 1 else 0 end) end)), 2) AS average_member_cost,
	SUM(CASE WHEN (s.contest_fee_percentage = 0) THEN (CASE WHEN s.member_cost > 0 THEN s.contest_fee ELSE 0 END) ELSE s.contest_fee_percentage * s.member_cost END)
	    AS total_contest_fee,
	    
	ROUND (SUM(CASE WHEN (s.contest_fee_percentage IS NULL  or s.contest_fee_percentage =0) THEN s.contest_fee ELSE s.contest_fee_percentage * s.member_cost END)
	    / (case when SUM(case when s.status='Completed' then 1 else 0 end)=0 
				then 1 else SUM(case when s.status='Completed' then 1 else 0 end) end), 2) AS average_contest_fee,
	
	SUM((CASE WHEN (s.contest_fee_percentage IS NULL  or s.contest_fee_percentage =0) THEN s.contest_fee ELSE s.contest_fee_percentage * s.member_cost END) + s.member_cost) AS total_cost,
	
	ROUND (SUM(case when s.status='Completed' then 1 else 0 end)*100/(case when SUM (case when (s.status='Cancelled' or s.status='Completed') then 1 else 0 end)=0
                               then 1 else SUM (case when (s.status='Cancelled' or s.status='Completed') then 1 else 0 end) end), 2) AS fullfillment,
    SUM(CASE 
            WHEN NOT (s.posting_date IS NULL OR s.complete_date IS NULL) 
            THEN (((s.complete_date - s.posting_date)::INTERVAL MINUTE(9) TO MINUTE::CHAR(20)::DECIMAL(10)) / 60) - s.approval_phase_duration 
	        ELSE 0 
	    END)
	/ 
	(CASE 
	        WHEN SUM(CASE 
                         WHEN NOT (s.posting_date IS NULL OR s.complete_date IS NULL) 
                         THEN 1 
                         ELSE 0 
	                 END) = 0 
	        THEN 1
	        ELSE SUM(CASE 
                         WHEN NOT (s.posting_date IS NULL OR s.complete_date IS NULL) 
                         THEN 1 ELSE 0 
	                 END)
	    END
	)
    AS average_duration
    
    
FROM table(MULTISET(SELECT
p.tc_direct_project_id as tc_direct_project_id,  
case when ppd.actual_start_time is not null then ppd.actual_start_time else psd.actual_start_time end as posting_date,
to_date(pi1.value[1,16], '%m.%d.%Y %H:%M') as complete_date,

case when (p.project_status_id = 7
           OR (p.project_status_id  = 1 and (p.project_category_id in (9, 29) or pcl.project_type_id = 3)
       	   and exists (select phase_type_id from project_phase
				where project_id = p.project_id and phase_type_id =4 and phase_status_id = 3)
		   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13))))
	  OR (p.project_status_id  = 1 and (p.project_category_id not in (9, 29) and pcl.project_type_id in (1,2))
       	   and (exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =11 and phase_status_id in(2,3))
		        OR not exists (select phase_type_id from project_phase	where project_id = p.project_id and phase_type_id =10 and phase_status_id in (1,2)))
		   	   and exists (select payment_id from informixoltp:payment pm 
		                   INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id 
					  where pmd.component_project_id = p.project_id 
						and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68, 69)
						 and pmd.payment_type_id in(6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)
						   and pmd.payment_detail_id =
						  (select min(pmd2.payment_detail_id) from informixoltp:payment pm2
								INNER JOIN informixoltp:payment_detail pmd2 ON pm2.most_recent_detail_id = pmd2.payment_detail_id
								where pmd2.component_project_id = p.project_id
								   and pmd2.installment_number = 1
								   AND NOT pmd2.payment_status_id IN (65,68, 69)
									and pmd2.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 64, 65, 60, 13)))))  then
    NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
    +
    nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0)
 when p.project_status_id not in (3,7) then NVL((SELECT sum(total_amount)
       FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
        WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
        and pm.most_recent_detail_id = pmd.payment_detail_id 
        AND NOT pmd.payment_status_id IN (65, 68, 69)), 0)
    +
    NVL((SELECT sum(pmd2.total_amount) 
           FROM  informixoltp:payment_detail pmd,  
                 informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
                 informixoltp:payment pm2 
            WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
            and pm.most_recent_detail_id = pmd.payment_detail_id  
            and pm2.most_recent_detail_id = pmd2.payment_detail_id 
            AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
 else 0 end as member_cost,

(select nvl(sum (cast (nvl (value, '0') as DECIMAL (10,2))), 0) from project_info
        where project_info_type_id = 31 and p.project_id = project_id and p.project_status_id = 7 ) as contest_fee,
        
nvl((select cast (nvl(pi57.value, '0') as DECIMAL (10,2)) from project_info pi57
                where p.project_id = pi57.project_id and pi57.project_info_type_id = 57),0) as contest_fee_percentage, 

case when p.project_status_id = 7 then 'Completed'
when p.project_status_id in (9, 10) then 'Cancelled'
when p.project_status_id in (1) then 'Active'
when p.project_status_id in (2) then 'Draft'
else 'Failed' end as status,
NVL((SELECT SUM(((actual_end_time - actual_start_time)::INTERVAL MINUTE(9) TO MINUTE::CHAR(20)::DECIMAL(10)) / 60) 
     FROM project_phase ppa
     WHERE ppa.project_id = p.project_id 
     AND ppa.phase_type_id = 11 
     AND NOT (ppa.actual_start_time IS NULL 
              OR ppa.actual_end_time IS NULL)), 0) 
AS approval_phase_duration
from project p, project_category_lu pcl, OUTER project_phase psd, OUTER project_phase ppd, outer project_info pi1
where p.project_id = ppd.project_id and psd.phase_type_id = 2 and ppd.phase_type_id = 1 and psd.project_id = p.project_id
and pi1.project_id = p.project_id  and pi1.project_info_type_id = 21
and p.tc_direct_project_id = @tcdirectid@
and p.project_category_id = pcl.project_category_id
and  project_status_id != 3
and p.project_category_id != 27
and (exists (select u.user_id 
         from user as u 
         join user_role_xref as uref 
            on u.user_id = @uid@
            and u.user_id = uref.login_id 
         join security_roles as sr 
            on uref.role_id = sr.role_id 
            and sr.description in ('TC Staff'))
     OR exists (select permission_type_id 
               from user_permission_grant as upg   
              where resource_id=p.tc_direct_project_id and permission_type_id in (1,2,3) 
               and upg.user_id = @uid@ )

      OR
                          exists (
                                  SELECT
                                         tdp.project_id as tc_direct_project_id
                                  FROM tc_direct_project tdp
                                  INNER JOIN group_associated_direct_projects gadp ON tdp.project_id = gadp.tc_direct_project_id
                                  INNER JOIN customer_group sg ON sg.group_id = gadp.group_id
                                  INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                  WHERE gm.user_id = @uid@
                                  AND   gm.active = 1
                                  AND   sg.archived = 0
                                  AND   tdp.project_id = p.tc_direct_project_id
                                  )
                       OR
                           exists (
                                   SELECT
                                          tdp.project_id as tc_direct_project_id
                                   FROM tc_direct_project tdp
                                   INNER JOIN corporate_oltp:direct_project_account dpa ON tdp.project_id = dpa.project_id
                                   INNER JOIN group_associated_billing_accounts gaba ON gaba.billing_account_id = dpa.billing_account_id
                                   INNER JOIN customer_group sg ON sg.group_id = gaba.group_id
                                   INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                   WHERE gm.user_id = @uid@
                                   AND   gm.active = 1
                                   AND   sg.archived = 0
                                   AND tdp.project_id = p.tc_direct_project_id
                                   )
                       OR
                           exists(
                               SELECT
                                   gm.group_id
                               FROM
                                   tc_direct_project tdp
                                   INNER JOIN corporate_oltp:direct_project_account dpa ON tdp.project_id = dpa.project_id
                                   INNER JOIN tt_project ttp ON dpa.billing_account_id = ttp.project_id
                                   INNER JOIN tt_client_project ttcp ON ttp.project_id = ttcp.project_id
                                   INNER JOIN tt_client ttc ON ttcp.client_id = ttc.client_id
                                   INNER JOIN customer_group sg ON sg.client_id = ttc.client_id
                                   INNER JOIN group_member gm ON sg.group_id = gm.group_id
                               WHERE
                                   sg.auto_grant = 1
                                   AND   gm.active = 1 and gm.unassigned_on is null
                                   AND   sg.archived = 0
                                   AND tdp.project_id = p.tc_direct_project_id
                                   AND ttc.client_status_id = 1
                                   AND ((gm.use_group_default=0 and gm.specific_permission!='REPORT')
                                           OR (gm.use_group_default=1 and sg.default_permission != 'REPORT'))
                                   AND   gm.user_id = @uid@
                           )

     )

union all -- project level cost & fee (68, 70, 71)

SELECT
tdp.project_id as tc_direct_project_id,
null::datetime year to fraction as posting_date,
null::datetime year to fraction as complete_date,
pmd.total_amount as member_cost,
CASE WHEN (pmd.jira_issue_id IS NOT NULL AND pmd.payment_type_id IN (68, 70, 71)) THEN NVL(tdp.fixed_bug_contest_fee, 0) ELSE 0 END as contest_fee,
CASE WHEN (pmd.jira_issue_id IS NOT NULL AND pmd.payment_type_id IN (68, 70, 71)) THEN NVL(tdp.percentage_bug_contest_fee, 0) ELSE 0 END as contest_fee_percentage,
null::lvarchar as status,
null::decimal(10,2) as approval_phase_duration

from tc_direct_project tdp, informixoltp:payment_detail pmd, informixoltp:payment pm
where tdp.project_id = @tcdirectid@ and pmd.cockpit_project_id = tdp.project_id and pmd.installment_number = 1
and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
AND NOT pmd.payment_status_id IN (65, 68, 69)
and (exists (select u.user_id
         from user as u
         join user_role_xref as uref
            on u.user_id = @uid@
            and u.user_id = uref.login_id
         join security_roles as sr
            on uref.role_id = sr.role_id
            and sr.description in ('TC Staff'))
     OR exists (select permission_type_id
               from user_permission_grant as upg
              where resource_id = tdp.project_id and permission_type_id in (1,2,3)
               and upg.user_id = @uid@ )

     OR
                          exists (
                                  SELECT
                                         tdp.project_id as tc_direct_project_id
                                  FROM tc_direct_project tdp2
                                  INNER JOIN group_associated_direct_projects gadp ON tdp2.project_id = gadp.tc_direct_project_id
                                  INNER JOIN customer_group sg ON sg.group_id = gadp.group_id
                                  INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                  WHERE gm.user_id = @uid@
                                  AND   gm.active = 1
                                  AND   sg.archived = 0
                                  AND   tdp2.project_id = tdp2.project_id
                                  )
                       OR
                           exists (
                                   SELECT
                                          tdp.project_id as tc_direct_project_id
                                   FROM tc_direct_project tdp2
                                   INNER JOIN corporate_oltp:direct_project_account dpa ON tdp2.project_id = dpa.project_id
                                   INNER JOIN group_associated_billing_accounts gaba ON gaba.billing_account_id = dpa.billing_account_id
                                   INNER JOIN customer_group sg ON sg.group_id = gaba.group_id
                                   INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                   WHERE gm.user_id = @uid@
                                   AND   gm.active = 1
                                   AND   sg.archived = 0
                                   AND tdp2.project_id = tdp.project_id
                                   )
                       OR
                          exists(
                              SELECT
                                  gm.group_id
                              FROM
                                  tc_direct_project tdp2
                                  INNER JOIN corporate_oltp:direct_project_account dpa ON tdp2.project_id = dpa.project_id
                                  INNER JOIN tt_project ttp ON dpa.billing_account_id = ttp.project_id
                                  INNER JOIN tt_client_project ttcp ON ttp.project_id = ttcp.project_id
                                  INNER JOIN tt_client ttc ON ttcp.client_id = ttc.client_id
                                  INNER JOIN customer_group sg ON sg.client_id = ttc.client_id
                                  INNER JOIN group_member gm ON sg.group_id = gm.group_id
                              WHERE
                                  sg.auto_grant = 1
                                  AND   gm.active = 1 and gm.unassigned_on is null
                                  AND   sg.archived = 0
                                  AND tdp2.project_id = tdp.project_id
                                  AND ttc.status = 1
                                  AND ((gm.use_group_default=0 and gm.specific_permission!='REPORT')
                                          OR (gm.use_group_default=1 and sg.default_permission != 'REPORT'))
                                  AND   gm.user_id = @uid@
                          )
)

union all   -- contest fixed bug race fee

SELECT
p.tc_direct_project_id as tc_direct_project_id,
null::datetime year to fraction as posting_date,
null::datetime year to fraction as complete_date,
0 as member_cost,
NVL(tdp.fixed_bug_contest_fee, 0) as contest_fee,
0 as contest_fee_percentage,
null::lvarchar as status,
null::decimal(10,2) as approval_phase_duration

from project p left join project_info pi57 ON pi57.project_id = p.project_id and pi57.project_info_type_id = 57,
informixoltp:payment_detail pmd, informixoltp:payment pm, tc_direct_project tdp
where tdp.project_id = @tcdirectid@
and p.tc_direct_project_id = tdp.project_id
and p.project_status_id != 3
and p.project_category_id != 27
and (pi57.value is null or pi57.value = 0)
and pmd.component_project_id = p.project_id and pmd.installment_number = 1
and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
AND NOT pmd.payment_status_id IN (65, 68, 69) AND pmd.jira_issue_id IS NOT NULL AND pmd.payment_type_id IN (23, 37, 46, 47)
and (exists (select u.user_id
         from user as u
         join user_role_xref as uref
            on u.user_id = @uid@
            and u.user_id = uref.login_id
         join security_roles as sr
            on uref.role_id = sr.role_id
            and sr.description in ('TC Staff'))
     OR exists (select permission_type_id
               from user_permission_grant as upg
              where resource_id=p.tc_direct_project_id and permission_type_id in (1,2,3)
               and upg.user_id = @uid@ )

      OR
                          exists (
                                  SELECT
                                         tdp.project_id as tc_direct_project_id
                                  FROM tc_direct_project tdp
                                  INNER JOIN group_associated_direct_projects gadp ON tdp.project_id = gadp.tc_direct_project_id
                                  INNER JOIN customer_group sg ON sg.group_id = gadp.group_id
                                  INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                  WHERE gm.user_id = @uid@
                                  AND   gm.active = 1
                                  AND   sg.archived = 0
                                  AND   tdp.project_id = p.tc_direct_project_id
                                  )
                       OR
                           exists (
                                   SELECT
                                          tdp.project_id as tc_direct_project_id
                                   FROM tc_direct_project tdp
                                   INNER JOIN corporate_oltp:direct_project_account dpa ON tdp.project_id = dpa.project_id
                                   INNER JOIN group_associated_billing_accounts gaba ON gaba.billing_account_id = dpa.billing_account_id
                                   INNER JOIN customer_group sg ON sg.group_id = gaba.group_id
                                   INNER JOIN group_member gm ON gm.group_id = sg.group_id
                                   WHERE gm.user_id = @uid@
                                   AND   gm.active = 1
                                   AND   sg.archived = 0
                                   AND tdp.project_id = p.tc_direct_project_id
                                   )
                       OR
                           exists(
                               SELECT
                                   gm.group_id
                               FROM
                                   tc_direct_project tdp
                                   INNER JOIN corporate_oltp:direct_project_account dpa ON tdp.project_id = dpa.project_id
                                   INNER JOIN tt_project ttp ON dpa.billing_account_id = ttp.project_id
                                   INNER JOIN tt_client_project ttcp ON ttp.project_id = ttcp.project_id
                                   INNER JOIN tt_client ttc ON ttcp.client_id = ttc.client_id
                                   INNER JOIN customer_group sg ON sg.client_id = ttc.client_id
                                   INNER JOIN group_member gm ON sg.group_id = gm.group_id
                               WHERE
                                   sg.auto_grant = 1
                                   AND   gm.active = 1 and gm.unassigned_on is null
                                   AND   sg.archived = 0
                                   AND tdp.project_id = p.tc_direct_project_id
                                   AND ttc.status = 1
                                   AND ((gm.use_group_default=0 and gm.specific_permission!='REPORT')
                                           OR (gm.use_group_default=1 and sg.default_permission != 'REPORT'))
                                   AND   gm.user_id = @uid@
                           )

     )

)) AS s
GROUP BY tc_direct_project_id;
