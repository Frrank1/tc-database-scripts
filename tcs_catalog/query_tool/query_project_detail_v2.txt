select cc.component_name
     , cv.version as version_id
     , cv.phase_id
     , round(nvl(pi16.value::decimal, 0)) as price
     , cc.description
     , cc.component_id
     , round(nvl(pi16.value::decimal, 0)) as total_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.75 as first_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.25 as second_payment
     , round(nvl(pi16.value::decimal, 0)) * 0.5 as second_place_payment
     , pp1.scheduled_start_time posting_date
     , pp2.scheduled_end_time initial_submission_date
     , NVL(pp6.scheduled_end_time, pp4.scheduled_end_time) winner_announced_date
     , pp9.scheduled_end_time final_submission_date
     , cd.document_id
     , cvd.status_id
     , (select count(*)
          from component_inquiry ci
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.version = cv.version) as num_inquiries
     , (select count(*)
          from component_inquiry ci, user_rating ur
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.phase = ur.phase_id
           and ci.user_id = ur.user_id
           and ci.version = cv.version) as num_rated_inquiries
     , (select count(*)
          from component_inquiry ci
         where ci.component_id = cc.component_id
           and ci.phase = cv.phase_id
           and ci.version = cv.version
           and not exists (select '1'
                             from user_rating ur
                            where ur.user_id = ci.user_id
                              and ur.phase_id = ci.phase
                              and ur.num_ratings > 0)) as num_unrated_inquiries
     , CASE WHEN (pp1.phase_status_id = 2) THEN 'open' ELSE 'closed' END as project_status
     , cc.root_category_id as root_category_id
     , cat.viewable
     , x.jive_category_id
     , cat.is_custom
     , p.project_category_id
     , pc.name as project_category_name
     , (select NVL(NVL(ppd.actual_start_time, psd.actual_start_time), ppd.scheduled_start_time)
          from project proj
             , OUTER project_phase psd
             , OUTER project_phase ppd
         where psd.project_id = proj.project_id
           and psd.phase_type_id = 2
           and ppd.project_id = proj.project_id
           and proj.project_id = p.project_id
           and ppd.phase_type_id = 1) as posting_date
     , pc3.parameter as screening_scorecard_id
     , pc4.parameter as review_scorecard_id
     , NVL((select value from project_info pi13 where pi13.project_id=p.project_id and pi13.project_info_type_id=13),"No") as rated
     , not exists (select * from project_info pi45 where pi45.project_info_type_id=45 and pi45.project_id=p.project_id and (pi45.value='false' or pi45.value='False')) as reliability_bonus_eligible
     , case when pi26.value = 'On' then
        NVL((select value::decimal from project_info pi30 where pi30.project_info_type_id = 30 and pi30.project_id = p.project_id), round(nvl(pi16.value::decimal, 0)))
        else 0 end as dr_points
     , pp1.scheduled_end_time as register_end_date
     , pp15.scheduled_end_time as milestone_submission_date
     , NVL(pp17.phase_status_id, 0) as milestone_review_status
     , (SELECT pr.prize_amount FROM prize pr WHERE pr.project_id = p.project_id AND prize_type_id = 14) as milestone_prize
     , (SELECT pr.number_of_submissions FROM prize pr WHERE pr.project_id = p.project_id AND prize_type_id = 14) as milestone_number
     , mf.feedback as milestone_general_feedback
     , p.project_status_id as project_status_id
     , CASE WHEN (pp2.phase_status_id = 2) THEN 'open' ELSE 'closed' END as submission_phase_opened
     , (pp10.scheduled_end_time) final_review_start_date
     , pp11.scheduled_start_time final_approval_start_date
  from project p
     , project_category_lu pc
     , comp_catalog cc
     , comp_versions cv
     , comp_version_dates cvd
     , project_phase pp1
     , project_phase pp2
     , OUTER project_phase pp6
     , OUTER project_phase pp9
     , OUTER project_phase pp10
     , OUTER project_phase pp11
     , OUTER project_phase pp15
     , OUTER project_phase pp17
     , project_phase pp4
     , project_info pi
     , OUTER comp_documentation cd
     , categories cat
     , outer comp_jive_category_xref x
     , outer project_info pi16
     , OUTER project_info pi26
     , OUTER ( project_phase pp3
     , OUTER phase_criteria pc3 )
     , phase_criteria pc4
     , OUTER comp_milestone_feedback mf
 where 1=1
   and p.project_id = @pj@
   and p.project_category_id = pc.project_category_id
   and cc.root_category_id = cat.category_id
   and p.project_id = pi.project_id
   and pi.project_info_type_id = 1
   and pi.value = cv.comp_vers_id
   and cv.component_id= cc.component_id
   and p.project_category_id in (1,2,6,5,7,9,13,14,23,19,24,25,26,29,35,36)
   and cv.comp_vers_id = cvd.comp_vers_id
   and cv.phase_id = cvd.phase_id
--these dates make this query return more than one row
   and pp1.project_id = p.project_id
   and pp1.phase_type_id = 1
   and pp2.project_id = p.project_id
   and pp2.phase_type_id = 2
   and pp6.project_id = p.project_id
   and pp6.phase_type_id = 6
   and pp9.project_id = p.project_id
   and pp9.phase_type_id = 9
   and pp10.project_id = p.project_id
   and pp10.phase_type_id = 10
   and pp11.project_id = p.project_id
   and pp11.phase_type_id = 11
   and pp15.project_id = p.project_id
   and pp15.phase_type_id = 15
   and pp17.project_id = p.project_id
   and pp17.phase_type_id = 17
   and cd.comp_vers_id = cv.comp_vers_id
   and cd.document_type_id = 0
   and x.comp_vers_id = cv.comp_vers_id
   and pi16.project_info_type_id = 16
   and pi16.project_id = p.project_id
   and pi26.project_id = p.project_id
   and pi26.project_info_type_id = 26
   and pp3.project_id = p.project_id
   and pp3.phase_type_id = 3
   and pp4.project_id = p.project_id
   and pp4.phase_type_id in (4, 18)
   and pp3.project_phase_id = pc3.project_phase_id
   and pc3.phase_criteria_type_id = 1
   and pp4.project_phase_id = pc4.project_phase_id
   and pc4.phase_criteria_type_id = 1
   and p.project_id = mf.project_id
