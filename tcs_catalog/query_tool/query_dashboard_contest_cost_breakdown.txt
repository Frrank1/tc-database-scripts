select p.project_id as id,
  case when p.project_status_id = 7 then 1 else 0 end as fullfillment,

  case when p.project_status_id in (9, 10) and exists (select * from project_phase where project_id = p.project_id and phase_type_id = 1 and phase_status_id in (2,3))
            then pi2.value::DECIMAL(10,2)
            when p.project_status_id in (9, 10) and not exists (select * from project_phase where project_id = p.project_id and phase_type_id = 1 and phase_status_id in (2,3))
            then 0 
            else pi2.value::DECIMAL(10,2) end as contest_fee,

  (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 13, 64, 65)), 0)
   ) AS prizes,

  (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (27, 48)), 0)
   ) AS spec_review,   

  (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (7, 28, 26)), 0)
   ) AS review,   

   (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (24)), 0)
   +
   NVL((SELECT sum(pmd2.total_amount)
          FROM informixoltp:payment_detail pmd,  
               informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
               informixoltp:payment pm2 
          WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
          AND pm.most_recent_detail_id = pmd.payment_detail_id  
          AND pm2.most_recent_detail_id = pmd2.payment_detail_id 
          AND pmd2.payment_type_id in (24)
          AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0)
   ) AS reliability,   

case when p.project_status_id = 7 then
nvl((select nvl(sum (cast (nvl (pi30.value, '0') as DECIMAL (10,2))), 0) from project_info pi30, project_info pi26
        where pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.project_id = pi30.project_id 
        and pi26.value = 'On'
        and pi26.project_id =  p.project_id ), 0) 
else 0 end as digital_run,

   (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (45,57)), 0)
   ) AS copilot,  

   (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (39)), 0)
   ) AS build, 

   (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id in (23,37,46,47)), 0)
   ) AS bugs, 

   (NVL((SELECT sum(pmd.total_amount)
          FROM informixoltp:payment_detail pmd, informixoltp:payment pm
            WHERE pmd.component_project_id = p.project_id and pmd.installment_number = 1
            AND pm.most_recent_detail_id = pmd.payment_detail_id 
            AND NOT pmd.payment_status_id IN (65, 68, 69)
            AND pmd.payment_type_id NOT in (39,23,37,46,47,45,57,4,24,27,7, 28, 26,6, 29, 10, 42, 43, 44, 49, 50, 51, 55, 61, 13, 48, 64, 65)), 0)
   ) 
   +
    NVL((SELECT sum(pmd2.total_amount)
          FROM informixoltp:payment_detail pmd,  
               informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id, 
               informixoltp:payment pm2 
          WHERE pmd.component_project_id = p.project_id and pmd2.installment_number = 1 
          AND pm.most_recent_detail_id = pmd.payment_detail_id  
          AND pm2.most_recent_detail_id = pmd2.payment_detail_id 
          AND pmd2.payment_type_id not in (24)
          AND NOT pmd2.payment_status_id IN (65, 68, 69)), 0) AS misc

 FROM project p,
      project_info pi2 -- contest_fee
 where p.project_id = pi2.project_id
  and pi2.project_info_type_id = 31
  and p.project_status_id =7 and p.project_category_id != 27
  and p.project_id in (@pids@)
   and (
       exists(select unique upg.resource_id from user_permission_grant upg
                where upg.user_id = DECODE( @uid@ ,0,upg.user_id, @uid@ ) and upg.permission_type_id IN (0,1,2,3)
                 and upg.resource_id = p.tc_direct_project_id)
       or 
       exists(select gadp.tc_direct_project_id 
     		from group_member AS gm, group_associated_direct_projects AS gadp, customer_group g
     		where
     		    gm.group_id = gadp.group_id
     	    AND g.group_id = gm.group_id
     	    AND g.archived = 0
     		AND gm.active = 1
     		AND gm.user_id = DECODE( @uid@ ,0,gm.user_id, @uid@ )
     		AND gadp.tc_direct_project_id = p.tc_direct_project_id)
       or
       exists(
            select gm.group_id from group_member gm,
              group_associated_billing_accounts gaba,
              customer_group g,
              corporate_oltp:direct_project_account dpa
             where gm.active=1 and gm.unassigned_on is null
              and gaba.group_id=gm.group_id
              and dpa.project_id = p.tc_direct_project_id
              and gaba.billing_account_id=dpa.billing_account_id
              and gm.user_id = DECODE( @uid@ ,0,gm.user_id, @uid@ )
              and g.group_id = gm.group_id
              and g.archived = 0
       )
       or
       exists(
          SELECT
              gm.group_id
          FROM
              tc_direct_project tdp
              INNER JOIN corporate_oltp:direct_project_account dpa ON tdp.project_id = dpa.project_id
              INNER JOIN tt_project ttp ON dpa.billing_account_id = ttp.project_id
              INNER JOIN tt_client_project ttcp ON ttp.project_id = ttcp.project_id
              INNER JOIN tt_client ttc ON ttcp.client_id = ttc.client_id
              INNER JOIN customer_group sg ON sg.client_id = ttc.client_id
              INNER JOIN group_member gm ON sg.group_id = gm.group_id
          WHERE
              sg.auto_grant = 1
              AND   gm.active = 1
              AND   sg.archived = 0
              AND tdp.project_id = p.tc_direct_project_id
              AND ttc.status = 1
              AND   gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@))
       )


