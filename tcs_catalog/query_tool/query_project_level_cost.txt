SELECT pm.create_date payment_date,                             -- 1
    null::int as contest_id,                                      -- 2
    null::varchar as contest_name,                                 -- 3

    tdp.project_id direct_project_id,                             -- 4
    pm.payment_id,                                                 -- 5    

    'PROJECT_LEVEL_COST' as payment_type,                     -- 6         
         
    pmd.total_amount 
    +
	 CASE
	    WHEN tdp.fixed_bug_contest_fee > 0
	    THEN tdp.fixed_bug_contest_fee * (select count(payment_id) from informixoltp:payment pm
	                                                             INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id
	                                                             where pmd.cockpit_project_id = tdp.project_id
	                                                             and pmd.installment_number = 1 AND NOT pmd.payment_status_id IN (65,68,69)
	                                                             and pmd.payment_type_id in(68, 70, 71) and pmd.jira_issue_id is not null)
	    WHEN tdp.percentage_bug_contest_fee > 0
	    THEN tdp.percentage_bug_contest_fee * (NVL((SELECT sum(total_amount)
	                                                 FROM  informixoltp:payment_detail pmd, informixoltp:payment pm
	                                                  WHERE pmd.cockpit_project_id = tdp.project_id and pmd.installment_number = 1
	                                                  and pm.most_recent_detail_id = pmd.payment_detail_id and pmd.payment_type_id != 4
	                                                  AND NOT pmd.payment_status_id IN (65, 68, 69) and pmd.payment_type_id in(68, 70, 71) and pmd.jira_issue_id is not null), 0)
	                                              +
	                                              NVL((SELECT sum(pmd2.total_amount)
	                                                     FROM  informixoltp:payment_detail pmd,
	                                                           informixoltp:payment pm LEFT OUTER JOIN informixoltp:payment_detail pmd2 on pm.payment_id = pmd2.parent_payment_id,
	                                                           informixoltp:payment pm2
	                                                      WHERE pmd.cockpit_project_id = tdp.project_id and pmd2.installment_number = 1
	                                                      and pm.most_recent_detail_id = pmd.payment_detail_id
	                                                      and pm2.most_recent_detail_id = pmd2.payment_detail_id and pmd2.payment_type_id != 4
	                                                      AND NOT pmd2.payment_status_id IN (65, 68, 69) and pmd.payment_type_id in(68, 70, 71) and pmd.jira_issue_id is not null), 0))
	    ELSE 0
	 END         -- project level bug race fee
 	as amount,                                     -- 7

    pt.payment_type_desc                                        -- 8
    
  
FROM informixoltp:payment pm 
            INNER JOIN informixoltp:payment_detail pmd ON pm.most_recent_detail_id = pmd.payment_detail_id,
         informixoltp:payment_type_lu pt, 
         tc_direct_project tdp, 
         time_oltp:project ttp
         
where pmd.cockpit_project_id = tdp.project_id                      -- Specifying the Project Level Payment 
    and pmd.payment_type_id = pt.payment_type_id
    and pmd.installment_number = 1 
    and pmd.payment_type_id != 4                                -- The payment shouldn't be 'Coder Referral Payment'
    and NOT pmd.payment_status_id IN (65,68, 69)                -- Filter out all the 'Cancelled', 'Expired', 'Deleted'    
                      
      -- If parameter specifies the direct project ID, we only use the corresponding direct project and the related records.
      and tdp.project_id = DECODE(@tcdirectid@, 0, tdp.project_id, @tcdirectid@)

    --- Here we specify the payment creation date range 
    and (pm.create_date BETWEEN TO_DATE('@sdt@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@edt@ 23:59:59', '%Y-%m-%d %H:%M:%S'))
    
    -- Join the billing projects
    and ttp.project_id = 
        (select min(billing_account_id) 
            from corporate_oltp:direct_project_account dpa 
            where dpa.project_id = tdp.project_id)
    
    -- Permissing related
    and (exists (select resource_id 
                from user_permission_grant upg
                where upg.user_id=DECODE(@uid@,0,upg.user_id,@uid@) 
                    and upg.permission_type_id IN (0,1,2,3)         -- 'project_report', 'project_read', 'project_write', 'project_full' 
                    and upg.resource_id = tdp.project_id)
           
        or
           exists(select gadp.tc_direct_project_id
                from group_member AS gm, group_associated_direct_projects AS gadp
                where gm.group_id = gadp.group_id AND gm.active = 1
                AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
                AND gadp.tc_direct_project_id = tdp.project_id)
        or
        exists(select gaba.billing_account_id
            from group_member AS gm, group_associated_billing_accounts AS gaba
            where gm.group_id = gaba.group_id AND gm.active = 1
            AND gm.user_id = DECODE(@uid@,0,gm.user_id,@uid@)
            AND gaba.billing_account_id = ttp.project_id)
            
		or exists(
		    SELECT UNIQUE
		        gm.group_id
		    FROM
		        tc_direct_project tdp2
		        INNER JOIN corporate_oltp:direct_project_account dpa ON tdp2.project_id = dpa.project_id
		        INNER JOIN tt_project ttp2 ON dpa.billing_account_id = ttp2.project_id
		        INNER JOIN tt_client_project ttcp2 ON ttp2.project_id = ttcp2.project_id
		        INNER JOIN tt_client ttc2 ON ttcp2.client_id = ttc2.client_id
		        INNER JOIN customer_group sg ON sg.client_id = ttc2.client_id
		        INNER JOIN group_member gm ON sg.group_id = gm.group_id
		    WHERE
		        sg.auto_grant = 1
		        AND   gm.active = 1
		        AND   sg.archived = 0
		        AND   ttc2.status = 1
		        AND tdp2.project_id = tdp.project_id
		        AND ((gm.use_group_default=0 and gm.specific_permission!='REPORT')
		                OR (gm.use_group_default=1 and sg.default_permission != 'REPORT'))
		        AND   gm.user_id = @uid@
		)
       )
                
group by 1,2,3,4,5,6,7,8
