select
  cal.week_year, cal.week_of_year,  min(cal.date) as start_of_week,
  count(*) as projects,
  round(case when count(*) = 0 then 0 else sum(case when num_submissions_passed_review > 0 then 1 else 0 end) / count(*) * 100 end, 1) || '%' as pct_fulfilled,
  sum(case when num_valid_submissions = 0 then 1 else 0 end) as num_hosed,
  round(case when count(*) = 0 then 0 else sum(case when num_valid_submissions = 0 then 1 else 0 end) / count(*) * 100 end, 1) || '%' as pct_hosed,
  sum(case when num_submissions_passed_review > 0 then 1 else 0 end) as projects_passing,
  sum(num_registrations) as registrations,
  round(case when count(*) = 0 then 0 else sum(num_registrations) / count(*) end, 2) as avg_reg,
  sum(num_submissions) as submissions,
  round(case when count(*) = 0 then 0 else sum(num_submissions) / count(*) end, 2) as avg_subs,
  sum(num_valid_submissions) as valid_submissions,
  sum(num_submissions_passed_review) as passing_submissions,
  round(case when count(*) = 0 then 0 else sum(num_submissions_passed_review) / count(*) end, 2) as avg_passing_subs,
  round(case when sum(num_submissions) = 0 then 0 else sum(num_submissions_passed_review) / sum(num_submissions) * 100 end, 1) || '%' as submission_effectiveness,
  round(case when sum(num_registrations) = 0 then 0 else sum(num_submissions_passed_review) / sum(num_registrations) * 100 end, 1) || '%' as registration_effectiveness,
  avg(p.complete_date - p.posting_date) duration,
  round( avg (p.avg_final_score) ) average_score,
  sum( case when p.avg_final_score >= 90 then 1 else 0 end ) as over_90,
  sum( case when p.avg_final_score < 90 and p.avg_final_score >= 80 then 1 else 0 end ) as between_80_and_90,
  sum( case when p.avg_final_score < 80 then 1 else 0 end ) as less_than_80
from
  project p,
  calendar cal
where
  cal.date = date(p.posting_date)
  and p.complete_date is not null
  and p.phase_id = @ph@
  and cal.date between (today-365/2) and today
  and category_desc != 'Application'
group by 1,2
order by 1,2